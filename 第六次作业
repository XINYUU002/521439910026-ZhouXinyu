ArrayList<ParticleSystem> systems;

void setup() {
  size(1000,1000);
  systems = new ArrayList<ParticleSystem>();
}

void draw() {
  background(0);
  for (ParticleSystem ps : systems) {
    ps.run();
    ps.addParticle();
  }
  if (systems.isEmpty()) {
    fill(random(0,255),random(0,255),random(0,255));
    textAlign(CENTER);
    text("click mouse to add particle systems", width/2, height*1/4);
    text("drag mouse to add particle systems", width/2, height*3/4);
  }
}

void mousePressed() {
  systems.add(new ParticleSystem(1, new PVector(mouseX, mouseY)));

}

void mouseDragged() {
  systems.add(new ParticleSystem(1, new PVector(mouseX, mouseY)));
}




class CrazyParticle extends Particle {

  float theta;

  CrazyParticle(PVector l) {

    super(l);

    theta = 0.0;
  }

  
  void update() {
    super.update();

    float theta_vel = (velocity.x * velocity.mag()) / 10.0f;
    theta += theta_vel;
  }

  void display() {

    super.display();

    pushMatrix();
    translate(position.x, position.y);
    rotate(theta);
    stroke(255, lifespan);
  
    popMatrix();
  }
}














class Particle {
  PVector position;
  PVector velocity;
  PVector acceleration;
  float lifespan;

  Particle(PVector l) {
    acceleration = new PVector(0, 0.05);
    velocity = new PVector(random(-1, 1), random(-2, 0));
    position = l.copy();
    lifespan = 255.0;
  }

  void run() {
    update();
    display();
  }

 
  void update() {
    velocity.add(acceleration);
    position.add(velocity);
    lifespan -= 2.0;
  }

 
  void display() {
    noStroke();
    fill(random(0,255),random(0,255),random(0,255),lifespan*random(1,30));
    ellipse(position.x, position.y, random(10,30),random(10,30));
    
  }

  
  boolean isDead() {
    return (lifespan < 0.0);
  }
}

















class ParticleSystem {

  ArrayList<Particle> particles;    
  PVector origin;                   

  ParticleSystem(int num, PVector v) {
    particles = new ArrayList<Particle>();   
    origin = v.copy();                       
    for (int i = 0; i < num; i++) {
      particles.add(new Particle(origin));    
    }
  }


  void run() {

    for (int i = particles.size()-1; i >= 0; i--) {
      Particle p = particles.get(i);
      p.run();
      if (p.isDead()) {
        particles.remove(i);
      }
    }
  }

  void addParticle() {
    Particle p;

    if (int(random(0, 2)) == 0) {
      p = new Particle(origin);
    } 
    else {
      p = new CrazyParticle(origin);
    }
    particles.add(p);
  }

  void addParticle(Particle p) {
    particles.add(p);
  }















